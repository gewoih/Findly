@page "/"
@using Microsoft.AspNetCore.Components.Web
@namespace FindlyApp.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="FindlyApp.styles.css" rel="stylesheet" />
    <link rel="icon" type="image/png" href="favicon.png"/>
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    <component type="typeof(App)" render-mode="ServerPrerendered" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>

    <script>
        const options = {
            enableHighAccuracy: true,
            timeout: 5000,
            maximumAge: 0
        };

        let latitude = 0;
        let longitude = 0;

        getGeolocation = async () => 
        {
            return [latitude, longitude];
        };

        function onPositionUpdate(pos) 
        {
            latitude = pos.coords.latitude;
            longitude = pos.coords.longitude;
        }

        function onError(err) 
        {
            console.error(`ERROR(${err.code}): ${err.message}`);
        }

        watchGeolocation = async () =>
        {
            id = navigator.geolocation.watchPosition(onPositionUpdate, onError, options);
        }
    </script>
</body>
</html>
